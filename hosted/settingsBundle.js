(()=>{var e={603:e=>{const a=(e,a)=>{let t=document.getElementById("errorMessage");for(const e of a)document.getElementById(`${e}`).classList.add("is-danger");t.textContent=e,t.style.display="block"};e.exports={handleError:a,sendPost:async(e,t,s)=>{const r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),n=await r.json();n.error&&a(n.error,[]),n.redirect&&(window.location=n.redirect),s&&s(n)},hideError:e=>{document.getElementById("errorMessage").style.display="none";for(const a of e)document.getElementById(`${a}`).classList.remove("is-danger")}}}},a={};function t(s){var r=a[s];if(void 0!==r)return r.exports;var n=a[s]={exports:{}};return e[s](n,n.exports,t),n.exports}(()=>{const e=t(603),a=a=>{a.preventDefault();const t=a.target.querySelector("#oldPassword").value,s=a.target.querySelector("#newPassword").value,r=a.target.querySelector("#newPassword2").value,n=a.target.querySelector("#_csrf").value;return t&&s&&r?t===s?(e.handleError("New password cannot be the same as old password!",["oldPassword","newPassword"]),!1):s!==r?(e.handleError("New passwords do not match!",["newPassword","newPassword2"]),!1):void e.sendPost(a.target.action,{oldPassword:t,newPassword:s,newPassword2:r,_csrf:n}):(e.handleError("Missing required parameters!",["oldPassword","newPassword","newPassword2"]),!1)},s=a=>{a.preventDefault();const t=a.target.querySelector("#newUsername").value,s=a.target.querySelector("#_csrf").value;if(!t)return e.handleError("Missing required parameters!",["newUsername"]),!1;e.sendPost(a.target.action,{newUsername:t,_csrf:s})},r=a=>{const t=["user","pass"];a.preventDefault(),e.hideError(t);const s=a.target.querySelector("#user").value,r=a.target.querySelector("#pass").value,n=a.target.querySelector("#_csrf").value;return s&&r?(e.sendPost(a.target.action,{username:s,pass:r,_csrf:n}),!1):(e.handleError("Username or password is empty!",t),!1)},n=e=>React.createElement("form",{id:"changePassForm",name:"changePassForm",onSubmit:a,action:"/changePass",method:"POST",className:"mainForm box"},React.createElement("div",{id:"changePasswordHeader"},React.createElement("h2",{className:"title is-underlined"},"Change Password:"),React.createElement("h3",{className:"subtitle has-text-danger"},"(Warning: Changing Password will log you out!)")),React.createElement("label",{className:"label",htmlFor:"pass"},"Old Password: "),React.createElement("input",{className:"input",id:"oldPassword",type:"password",name:"oldPass",placeholder:"password"}),React.createElement("label",{className:"label",htmlFor:"pass2"},"New Password: "),React.createElement("input",{className:"input",id:"newPassword",type:"password",name:"newPass",placeholder:"new password"}),React.createElement("label",{className:"label",htmlFor:"pass2"},"New Password: "),React.createElement("input",{className:"input",id:"newPassword2",type:"password",name:"newPass2",placeholder:"retype new password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit button mt-3 is-danger",type:"submit",value:"Submit"})),c=e=>React.createElement("form",{id:"changeUserForm",name:"changeUserForm",onSubmit:s,action:"/changeUser",method:"POST",className:"mainForm box"},React.createElement("h2",{className:"title is-3 is-underlined"},"Change Username:"),React.createElement("h3",{className:"subtitle"},"(Username will change immediately if it is not already taken)"),React.createElement("label",{className:"label",htmlFor:"newUsername"},"New Username: "),React.createElement("input",{className:"input",id:"newUsername",type:"text",name:"newUsername",placeholder:"new username"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"button mt-3 is-warning",type:"submit",value:"Submit"})),l=e=>React.createElement("form",{id:"deleteForm",name:"deleteForm",onSubmit:r,action:"/deleteAccount",method:"POST",className:"mainForm box"},React.createElement("h3",{className:"title is-3 is-underlined"},"Delete Account"),React.createElement("h2",{className:"subtitle has-text-danger"},"Enter your credentials below to delete your account"),React.createElement("label",{className:"label",htmlFor:"username"},"Username: "),React.createElement("input",{className:"input",id:"user",type:"text",name:"username",placeholder:"username"}),React.createElement("label",{className:"label",htmlFor:"pass"},"Password: "),React.createElement("input",{className:"input",id:"pass",type:"password",name:"pass",placeholder:"password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit button mt-3 is-danger",type:"submit",value:"Delete my Account"})),o=e=>React.createElement("form",{id:"resetForm",name:"resetForm",onSubmit:r,action:"/resetHighScore",method:"POST",className:"mainForm box"},React.createElement("h3",{className:"title is-3 is-underlined"},"Reset Account Data"),React.createElement("h2",{className:"subtitle"},"This will erase your high score data."),React.createElement("label",{className:"label",htmlFor:"username"},"Username: "),React.createElement("input",{className:"input",id:"user",type:"text",name:"username",placeholder:"username"}),React.createElement("label",{className:"label",htmlFor:"pass"},"Password: "),React.createElement("input",{className:"input",id:"pass",type:"password",name:"pass",placeholder:"password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit button mt-3 is-warning",type:"submit",value:"Reset my High Score"}));window.onload=async()=>{const a=await fetch("/getToken"),t=await a.json(),s=document.getElementById("changeUserBtn"),r=document.getElementById("changePassBtn"),m=document.getElementById("eraseDataBtn"),i=document.getElementById("deleteAccountBtn");s.addEventListener("click",(a=>{a.preventDefault(),ReactDOM.render(React.createElement(c,{csrf:t.csrfToken}),document.getElementById("editForm")),e.hideError(["newUsername"]),s.classList.add("is-primary"),r.classList.remove("is-primary"),m.classList.remove("is-primary"),i.classList.remove("is-primary")})),r.addEventListener("click",(a=>{a.preventDefault(),ReactDOM.render(React.createElement(n,{csrf:t.csrfToken}),document.getElementById("editForm")),e.hideError(["oldPassword","newPassword","newPassword2"]),s.classList.remove("is-primary"),r.classList.add("is-primary"),m.classList.remove("is-primary"),i.classList.remove("is-primary")})),m.addEventListener("click",(a=>{a.preventDefault(),ReactDOM.render(React.createElement(o,{csrf:t.csrfToken}),document.getElementById("editForm")),e.hideError(["user","pass"]),s.classList.remove("is-primary"),r.classList.remove("is-primary"),m.classList.add("is-primary"),i.classList.remove("is-primary")})),i.addEventListener("click",(a=>{a.preventDefault(),ReactDOM.render(React.createElement(l,{csrf:t.csrfToken}),document.getElementById("editForm")),e.hideError(["user","pass"]),s.classList.remove("is-primary"),r.classList.remove("is-primary"),m.classList.remove("is-primary"),i.classList.add("is-primary")}))}})()})();