(()=>{var e={603:e=>{const t=(e,t)=>{let a=document.getElementById("errorMessage");for(const e of t)document.getElementById(`${e}`).classList.add("is-danger");a.textContent=e,a.style.display="block"};e.exports={handleError:t,sendPost:async(e,a,r)=>{const n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),s=await n.json();s.error&&t(s.error,[]),s.redirect&&(window.location=s.redirect),r&&r(s)},hideError:e=>{document.getElementById("errorMessage").style.display="none";for(const t of e)document.getElementById(`${t}`).classList.remove("is-danger")}}}},t={};function a(r){var n=t[r];if(void 0!==n)return n.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,a),s.exports}(()=>{const e=a(603),t=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#oldPassword").value,r=t.target.querySelector("#newPassword").value,n=t.target.querySelector("#newPassword2").value,s=t.target.querySelector("#_csrf").value;return a&&r&&n?a===r?(e.handleError("New password cannot be the same as old password!"),!1):r!==n?(e.handleError("New passwords do not match!"),!1):void e.sendPost(t.target.action,{oldPassword:a,newPassword:r,newPassword2:n,_csrf:s}):(e.handleError("Missing required parameters!"),!1)},r=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#newUsername").value,r=t.target.querySelector("#_csrf").value;if(!a)return e.handleError("Missing required parameters!"),!1;e.sendPost(t.target.action,{newUsername:a,_csrf:r})},n=e=>React.createElement("form",{id:"changePassForm",name:"changePassForm",onSubmit:t,action:"/changePass",method:"POST",className:"mainForm"},React.createElement("div",{id:"changePasswordHeader"},React.createElement("h2",null,"Change Password:"),React.createElement("h3",null,"(Warning: Changing Password will log you out!)")),React.createElement("label",{htmlFor:"pass"},"Old Password: "),React.createElement("input",{id:"oldPassword",type:"password",name:"oldPass",placeholder:"password"}),React.createElement("label",{htmlFor:"pass2"},"New Password: "),React.createElement("input",{id:"newPassword",type:"password",name:"newPass",placeholder:"new password"}),React.createElement("label",{htmlFor:"pass2"},"New Password: "),React.createElement("input",{id:"newPassword2",type:"password",name:"newPass2",placeholder:"retype new password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Submit"})),s=e=>React.createElement("form",{id:"changeUserForm",name:"changeUserForm",onSubmit:r,action:"/changeUser",method:"POST",className:"mainForm"},React.createElement("div",{id:"changeUsernameHeader"},React.createElement("h2",null,"Change Username:")),React.createElement("label",{htmlFor:"newUsername"},"New Username: "),React.createElement("input",{id:"newUsername",type:"text",name:"newUsername",placeholder:"new username"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Submit"}));window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json(),a=document.getElementById("changeUserBtn"),r=document.getElementById("changePassBtn");a.addEventListener("click",(e=>{e.preventDefault(),ReactDOM.render(React.createElement(s,{csrf:t.csrfToken}),document.getElementById("editForm"))})),r.addEventListener("click",(e=>{e.preventDefault(),ReactDOM.render(React.createElement(n,{csrf:t.csrfToken}),document.getElementById("editForm"))}))}})()})();